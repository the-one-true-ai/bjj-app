"""test

Revision ID: 50efe1841ec7
Revises: 9a48f8ec105c
Create Date: 2025-03-15 16:47:46.206709

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50efe1841ec7'
down_revision: Union[str, None] = '9a48f8ec105c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dim_user_test',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.drop_table('DimGym')
    op.drop_table('fact_student')
    op.drop_table('fact_coach')
    op.drop_table('fact_user')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fact_user',
    sa.Column('uid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('belt', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('preferred_ruleset', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('social_links', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('competition_history', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('associations', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('height', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('birthdate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('profile_picture', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_deactivated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uid', name='fact_user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('fact_coach',
    sa.Column('coach_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('uid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('expertise', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('affiliations', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('coach_bio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('languages', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('reviews_given', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('active_flag', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['uid'], ['fact_user.uid'], name='fact_coach_uid_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('coach_id', name='fact_coach_pkey')
    )
    op.create_table('fact_student',
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('uid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('areas_working_on', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('preferred_coach_style', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['fact_user.uid'], name='fact_student_uid_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_id', name='fact_student_pkey')
    )
    op.create_table('DimGym',
    sa.Column('gym_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('gym_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('affiliation', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('gym_id', name='DimGym_pkey')
    )
    op.drop_table('dim_user_test')
    # ### end Alembic commands ###
